type: sidebar
path: test
title: TEST
cards:
  - type: custom:vertical-stack-in-card
    cards:
      - type: custom:apexcharts-card
        update_interval: 5 min
        graph_span: 48h
        cache: false
        span:
          start: day
          offset: +0H
        header:
          title: Spotpris 48h ink moms
          show: true
          show_states: false
          colorize_states: true
        hours_12: false
        stacked: false
        experimental:
          color_threshold: true
        yaxis:
          - id: spotpris
            opposite: false
            show: true
            decimals: 1
            min: 0
            apex_config:
              title:
                text: Elpris (SEK/kWh)
          - id: battery
            opposite: true
            show: true
            decimals: 0
            max: 100
            min: 0
            apex_config:
              title:
                text: Batterinivå (%)
          - id: import
            opposite: true
            show: false
            min: 0
            decimals: 1
            apex_config:
              title:
                text: Energi (kWh)
          - id: export
            opposite: true
            show: true
            decimals: 1
            apex_config:
              title:
                text: Energi (kWh)
          - id: solar_power
            opposite: true
            show: false
          - id: charge/expensive
            opposite: true
            show: false
        apex_config:
          chart:
            height: 255
            animations:
              enabled: true
              easing: easeinout
              speed: 800
              animateGradually:
                enabled: true
                delay: 150
          legend:
            show: true
            floating: false
            offsetY: 5
            position: bottom
            fontSize: 10px
          tooltip:
            enabled: false
          xaxis:
            labels:
              show: true
              rotate: 0
              rotateAlways: true
              logarithmic: false
          stroke:
            width: 1
          plotOptions:
            candlestick:
              colors:
                upward: "#00B746"
                downward: "#EF403C"
              wick:
                useFillColor: true
        all_series_config:
          show:
            legend_value: false
            datalabels: false
            in_brush: false
          float_precision: 3
          invert: false
          fill_raw: last
        now:
          show: true
          label: NU
          color: red
        series:
          - entity: sensor.solar_forecast_west
            yaxis_id: solar_power
            data_generator: |
              return entity.attributes.west.watts.map((entry) => {
                return [new Date(entry.date), entry.values / 1000]; // Konvertera till kWh
              });
            name: Solel
            type: area
            color: orange
            opacity: 0.7
            stroke_width: 3
            color_threshold:
              - value: 0
                color: "#fff9c4"
              - value: 5
                color: "#ffeb3b"
              - value: 15
                color: "#fbc02d"
          - entity: sensor.nordpool_kwh_se4_sek_1_10_0
            yaxis_id: spotpris
            type: area
            name: Idag
            opacity: 0.7
            color: grey
            extend_to: false
            data_generator: |
              const data = entity.attributes.raw_today.map((start, index) => {
                return [new Date(start["start"]).getTime(), start["value"]];
              });
              const last = entity.attributes.raw_today.slice(-1)[0];
              const lastTime = new Date(last["start"]).getTime();
              data.push([lastTime + 3600000, last["value"]]); // 
              return data;
            color_threshold:
              - value: -1
                color: 1E90FF
              - value: 0.5
                color: "008000"
              - value: 1
                color: DAA520
              - value: 2
                color: FF0000
            show:
              legend_value: false
              datalabels: false
              extremas: true
              in_brush: false
              in_legend: false
          - entity: sensor.nordpool_kwh_se4_sek_1_10_0
            yaxis_id: spotpris
            name: Imorgon
            type: area
            opacity: 0.7
            color: grey
            data_generator: >
              const data = entity.attributes.raw_tomorrow.map((start, index) =>
              {
                return [new Date(start["start"]).getTime(), start["value"]];
              });

              const last = entity.attributes.raw_tomorrow.slice(-1)[0]; const
              lastTime = new Date(last["start"]).getTime();

              data.push([lastTime + 3600000, last["value"]]);

              return data;
            color_threshold:
              - value: -1
                color: 1E90FF
              - value: 0.5
                color: "008000"
              - value: 1
                color: DAA520
              - value: 2
                color: FF0000
            show:
              legend_value: false
              datalabels: false
              extremas: true
              in_brush: false
              in_legend: false
          - entity: sensor.battery_charge_window_cheapest_1a
            yaxis_id: charge/expensive
            name: Laddningsfönster
            opacity: 0.7
            color: "#00406c"
            type: area
            data_generator: |
              const data = [];
              const sensorData = entity.state.split(' - ');
              function parseLocalTime(str) {
                const parts = str.split(/[- :T]/).map(Number);
                const date = new Date(parts[0], parts[1] - 1, parts[2], parts[3], parts[4]);
                return date.getTime();
              }
              const startTime = parseLocalTime(sensorData[0]);
              const endTime = parseLocalTime(sensorData[1]);
              data.push([startTime, 3]);
              data.push([startTime, 3]);
              data.push([endTime, 3]);
              data.push([endTime, 0]);
              return data;
            show:
              legend_value: false
              datalabels: false
              extremas: false
              in_brush: false
              in_legend: true
          - entity: sensor.battery_charge_window_cheapest_2
            yaxis_id: charge/expensive
            name: Laddning 2
            opacity: 0.7
            color: "#00406c"
            type: area
            data_generator: |
              const data = [];
              const sensorData = entity.state.split(' - ');
              function parseLocalTime(str) {
                const parts = str.split(/[- :T]/).map(Number);
                const date = new Date(parts[0], parts[1] - 1, parts[2], parts[3], parts[4]);
                return date.getTime();
              }
              const startTime = parseLocalTime(sensorData[0]);
              const endTime = parseLocalTime(sensorData[1]);
              data.push([startTime, 3]);
              data.push([startTime, 3]);
              data.push([endTime, 3]);
              data.push([endTime, 0]);
              return data;
            show:
              legend_value: false
              datalabels: false
              extremas: false
              in_brush: false
              in_legend: false
          - entity: sensor.battery_charge_window_cheapest_1b
            yaxis_id: charge/expensive
            name: Laddning 3
            opacity: 0.7
            color: "#00406c"
            type: area
            data_generator: |
              const data = [];
              const sensorData = entity.state.split(' - ');
              function parseLocalTime(str) {
                const parts = str.split(/[- :T]/).map(Number);
                const date = new Date(parts[0], parts[1] - 1, parts[2], parts[3], parts[4]);
                return date.getTime();
              }
              const startTime = parseLocalTime(sensorData[0]);
              const endTime = parseLocalTime(sensorData[1]);
              data.push([startTime, 3]);
              data.push([startTime, 3]);
              data.push([endTime, 3]);
              data.push([endTime, 0]);
              return data;
            show:
              legend_value: false
              datalabels: false
              extremas: false
              in_brush: false
              in_legend: false
        view_layout:
          position: main
      - type: custom:gap-card
        height: 5
  - square: false
    type: grid
    cards:
      - type: custom:vertical-stack-in-card
        cards:
          - type: heading
            icon: mdi:battery-charging
            heading: Ladda
            heading_style: title
          - features:
              - type: numeric-input
                style: buttons
            type: tile
            entity: input_number.battery_charge_duration_hours
            features_position: inline
            vertical: false
            name: Tid
            icon: mdi:battery-clock
            tap_action:
              action: none
            icon_tap_action:
              action: none
          - features:
              - type: numeric-input
                style: buttons
            type: tile
            entity: input_number.battery_buffer_kwh
            features_position: inline
            vertical: false
            name: Buffert
            icon: mdi:battery-20
            tap_action:
              action: none
            icon_tap_action:
              action: none
            hide_state: true
          - features:
              - type: numeric-input
                style: buttons
            type: tile
            features_position: inline
            vertical: false
            name: Superbilligt
            icon: mdi:chart-bar
            tap_action:
              action: none
            icon_tap_action:
              action: none
            entity: input_number.price_limit_supercheap
            hide_state: true
          - type: markdown
            content: >
              <ha-icon icon="mdi:information-outline"></ha-icon>
              <b>Information</b>


              <i>Tid anger hur långa laddningsfönster som ska sökas upp. 


              Buffert lägger till extra kWh i energiberäkningen. Ett högre
              buffertvärde höjer miniminivån för batteriladdningen medan ett
              lägre buffertvärde sänker nivån.


              Superbilligt anger vad som är superbilligt elpris. Styr om
              batteriet ska fyllas på med el från elnätet om elen är billig. 

              </i>
            text_only: true
        view_layout:
          position: sidebar
      - type: custom:vertical-stack-in-card
        cards:
          - type: heading
            icon: mdi:transmission-tower-export
            heading: Sälja
            heading_style: title
          - type: tile
            entity: input_number.expensive_electricity
            features_position: inline
            vertical: false
            name: Säljgräns
            icon: mdi:chart-areaspline-variant
            hide_state: true
            tap_action:
              action: none
            icon_tap_action:
              action: none
            features:
              - type: numeric-input
                style: buttons
          - features:
              - type: numeric-input
                style: buttons
            type: tile
            entity: input_number.battery_charge_price
            features_position: inline
            vertical: false
            name: Laddgräns
            icon: mdi:chart-areaspline-variant
            hide_state: true
            tap_action:
              action: none
            icon_tap_action:
              action: none
          - type: markdown
            content: >-
              <ha-icon icon="mdi:information-outline"></ha-icon>
              <b>Information</b>

              <i>

              Säljgräns: Bestämmer hur dyr elen måste vara för att batteriet ska
              sälja el.


              Laddgräns: Sätter gränsen för elpriset vid nästa
              laddningstillfälle. Detta förhindrar att el säljs till ett högt
              pris och sedan laddas tillbaka till ett olönsamt pris.


              <b>OBS!</b> Alla gränsvärden måste uppfyllas för att el ska säljas
              från batteriet. Ananrs kommer egenförbrukning prioteras

              </i>
    columns: 2
  - type: custom:vertical-stack-in-card
    cards:
      - type: heading
        icon: mdi:cog
        heading_style: title
        heading: Kontrollpanel
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - clock_style: analog
                clock_size: small
                show_seconds: true
                no_background: false
                border: false
                ticks: hour
                type: clock
              - show_current: false
                show_forecast: true
                type: weather-forecast
                entity: weather.smhi_klagshamn
                forecast_type: daily
                name: Klagshamn
                forecast_slots: 3
        view_layout:
          position: sidebar
      - features:
          - type: numeric-input
            style: buttons
        type: tile
        entity: input_number.battery_total_capacity_kwh
        features_position: inline
        vertical: false
        name: Total kapacitet
        icon: mdi:battery
        hide_state: true
      - features:
          - type: trend-graph
        type: tile
        entity: sensor.batteries_state_of_capacity
        features_position: bottom
        vertical: false
        name: Batterinivå
        tap_action:
          action: none
        icon: mdi:home-battery
        show_entity_picture: false
        hide_state: false
        color: indigo
      - features:
          - type: trend-graph
        type: tile
        entity: sensor.batteries_charge_discharge_power
        features_position: inline
        vertical: false
        name: Batterieffekt
        icon: mdi:battery-charging-100
        tap_action:
          action: none
        icon_tap_action:
          action: none
        color: indigo
      - features:
          - type: select-options
        type: tile
        entity: select.batteries_working_mode
        features_position: inline
        vertical: false
        hide_state: true
        icon: mdi:auto-mode
        name: Arbetsläge batteri
        tap_action:
          action: none
        color: indigo
      - features:
          - type: trend-graph
        type: tile
        entity: sensor.power_meter_active_power
        features_position: inline
        vertical: false
        name: Smartmätare
        tap_action:
          action: none
        icon_tap_action:
          action: none
        color: red
      - features:
          - type: trend-graph
        type: tile
        features_position: inline
        vertical: false
        entity: sensor.input_power_with_efficiency_loss_kw
        name: Solceller
        icon: mdi:solar-panel
        color: primary
        tap_action:
          action: none
        icon_tap_action:
          action: none
      - features:
          - type: toggle
        type: tile
        entity: input_boolean.export_limit_active
        features_position: inline
        vertical: false
        icon: mdi:transmission-tower-off
        hide_state: true
        tap_action:
          action: toggle
        color: green
        name: "Ingen export "
      - type: markdown
        content: >-
          <b>Information</b>

          <i>Aktivera om du vill begränsa export av överskottet från solcellerna
          om elpriset är negativt.</i>
        text_only: true
    view_layout:
      position: sidebar
